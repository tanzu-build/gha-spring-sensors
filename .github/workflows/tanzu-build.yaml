name: tanzu-build-workflow
on: [push]
jobs:
  tanzu_deploy_job:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Build with tanzu build cli on Commit
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build with Tanzu build cli
        uses: tanzu-build/tanzu-build-action@v1.6.1
        with:
          container_registry: public.ecr.aws/u6w4s2c8/gha-build/gha-spring-sensors
          buildPlanSource: './platform-config.yaml'

      # - name: Deploy to Amazon ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      #   with:
      #     task-definition: task-def.json
      #     service: sensor
      #     cluster: deathstar
      #     wait-for-service-stability: true

      - name: Update kube config
        run: aws eks update-kubeconfig --name eks-demo --region us-west-2

      - name: Deploy to EKS
        run: kubectl apply -f ./tanzu-build/apps.tanzu.vmware.com.ContainerApp/spring-sensors/kubernetes-plain/output/app-config 
      
      # - name: Commit
      #   run: |
      #     git config --global user.name 'Your Name'
      #     git config --global user.email 'your-username@users.noreply.github.com'
      #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
      #     git checkout "${GITHUB_REF:11}"
      #     git commit -am "After build"
      #     git push